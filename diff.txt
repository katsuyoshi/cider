diff --git a/cider/CoreData/NSManagedObject/ISFetchRequestCondition.h b/cider/CoreData/NSManagedObject/ISFetchRequestCondition.h
index a775660..c875892 100644
--- a/cider/CoreData/NSManagedObject/ISFetchRequestCondition.h
+++ b/cider/CoreData/NSManagedObject/ISFetchRequestCondition.h
@@ -42,6 +42,7 @@
 
 @interface ISFetchRequestCondition : NSObject {
 
+    NSEntityDescription *_entity;
     NSString *_entityName;
     NSPredicate *_predicate;
     NSArray *_sortDescriptors;
@@ -54,6 +55,9 @@
     NSFetchedResultsController *_fetchedResultsController;
 }
 
+/** An entity for creation of NSFetchRequest or NSFetchedResultsController. */
+@property (retain) NSEntityDescription *entity;
+
 /** An entity name for creation of NSFetchRequest or NSFetchedResultsController. */
 @property (retain) NSString *entityName;
 
diff --git a/cider/CoreData/NSManagedObject/ISFetchRequestCondition.m b/cider/CoreData/NSManagedObject/ISFetchRequestCondition.m
index 7221b12..03949b7 100644
--- a/cider/CoreData/NSManagedObject/ISFetchRequestCondition.m
+++ b/cider/CoreData/NSManagedObject/ISFetchRequestCondition.m
@@ -42,6 +42,7 @@
 
 @implementation ISFetchRequestCondition
 
+@synthesize entity = _entity;
 @synthesize entityName = _entityName;
 @synthesize predicate = _predicate;
 @synthesize sortDescriptors = _sortDescriptors;
@@ -58,7 +59,8 @@
 - (NSArray *)kvoKeys
 {
     return [NSArray arrayWithObjects:
-                      @"entityName"
+                      @"entity"
+                    , @"entityName"
                     , @"predicate"
                     , @"sortDescriptors"
                     , @"managedObjectContext"
@@ -97,6 +99,25 @@
     [super dealloc];
 }
 
+- (NSString *)entityName
+{
+    if (_entityName == nil) {
+        if (_entity) {
+            return [_entity name];
+        }
+    }
+    return _entityName;
+}
+
+- (NSEntityDescription *)entity
+{
+    if (_entity == nil) {
+        if (_entityName && _managedObjectContext) {
+            _entity = [NSEntityDescription entityForName:_entityName inManagedObjectContext:_managedObjectContext];
+        }
+    }
+    return _entity;
+}
 
 - (NSFetchRequest *)fetchRequst
 {
@@ -110,9 +131,8 @@
             @throw [NSException exceptionWithName:@"Cider" reason:reason userInfo:[NSDictionary dictionaryWithObject:self forKey:@"self"]];
         }
     
-        NSEntityDescription *entity = [NSEntityDescription entityForName:self.entityName inManagedObjectContext:self.managedObjectContext];
         _fetchRequest = [NSFetchRequest new];
-        [_fetchRequest setEntity:entity];
+        [_fetchRequest setEntity:self.entity];
         [_fetchRequest setPredicate:self.predicate];
         [_fetchRequest setSortDescriptors:self.sortDescriptors];
     
diff --git a/cider/CoreData/NSManagedObject/NSManagedObjectList.h b/cider/CoreData/NSManagedObject/NSManagedObjectList.h
index f2fee05..88a9681 100644
--- a/cider/CoreData/NSManagedObject/NSManagedObjectList.h
+++ b/cider/CoreData/NSManagedObject/NSManagedObjectList.h
@@ -55,6 +55,11 @@
  */
 + (NSString *)listScopeName;
 
+/**
+ * Return whether list is supported.
+ */
++ (BOOL)listAvailable;
+- (BOOL)listAvailable;
 
 /**
  * Set list number immediately.
diff --git a/cider/CoreData/NSManagedObject/NSManagedObjectList.m b/cider/CoreData/NSManagedObject/NSManagedObjectList.m
index 39ef17f..13cd2c2 100644
--- a/cider/CoreData/NSManagedObject/NSManagedObjectList.m
+++ b/cider/CoreData/NSManagedObject/NSManagedObjectList.m
@@ -43,6 +43,7 @@
 #import "NSErrorExtension.h"
 #import "NSManagedObjectFind.h"
 #import "NSSortDescriptorExtension.h"
+#import "NSManagedObjectContextDefaultContext.h"
 
 
 @implementation NSManagedObject(ISActAsList)
@@ -57,15 +58,11 @@
     return nil;
 }
 
-
-#pragma mark -
-#pragma mark helper
-
-- (BOOL)listAvailable
++ (BOOL)listAvailable
 {
     NSString *listAttributeName = [[self class] listAttributeName];
     NSString *listScopeName = [[self class] listScopeName];
-    NSEntityDescription *entity = [self entity];
+    NSEntityDescription *entity = [NSEntityDescription entityForName:NSStringFromClass(self) inManagedObjectContext:[NSManagedObjectContext defaultManagedObjectContext]];
 
     // check attribute
     if ([listAttributeName length] == 0) {
@@ -87,6 +84,14 @@
     return YES;
 }
 
+- (BOOL)listAvailable
+{
+    return [[self class] listAvailable];
+}
+
+#pragma mark -
+#pragma mark helper
+
 - (ISFetchRequestCondition *)conditionForListWithDesc:(BOOL)desc
 {
     if ([self listAvailable]) {
diff --git a/tests/CiderTest/CiderTest.xcodeproj/project.pbxproj b/tests/CiderTest/CiderTest.xcodeproj/project.pbxproj
index 52f30a2..2820f7d 100755
--- a/tests/CiderTest/CiderTest.xcodeproj/project.pbxproj
+++ b/tests/CiderTest/CiderTest.xcodeproj/project.pbxproj
@@ -53,6 +53,11 @@
 		468F0C191025E86C00F3DDF6 /* NSManagedObjectCreationTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 468F0C181025E86C00F3DDF6 /* NSManagedObjectCreationTest.m */; };
 		469B10481031C7C800025C80 /* NSFetchedResultsControllerSortedObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B10471031C7C800025C80 /* NSFetchedResultsControllerSortedObject.m */; };
 		469B104C1031C82400025C80 /* NSFetchedResultsControllerSortedObjectTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B104B1031C82400025C80 /* NSFetchedResultsControllerSortedObjectTest.m */; };
+		469B8A5E105532FF00F59D7E /* ISCDListTableViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B8A5D105532FF00F59D7E /* ISCDListTableViewController.m */; };
+		469B8A7B105542FB00F59D7E /* ISFetchRequestConditionTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B8A7A105542FB00F59D7E /* ISFetchRequestConditionTest.m */; };
+		469B8A8D105545C100F59D7E /* ISCDListTableViewControllerTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B8A8C105545C100F59D7E /* ISCDListTableViewControllerTest.m */; };
+		469B8A96105547DB00F59D7E /* UITableViewControllerTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B8A93105547DB00F59D7E /* UITableViewControllerTest.m */; };
+		469B8A97105547DB00F59D7E /* UIViewControllerTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 469B8A95105547DB00F59D7E /* UIViewControllerTest.m */; };
 		469F8E840FBC5A4C004FD86F /* NSExceptionExtension.m in Sources */ = {isa = PBXBuildFile; fileRef = 469F8E830FBC5A4C004FD86F /* NSExceptionExtension.m */; };
 		46B32F8210249DC600F40719 /* NSManagedObjectContextDefaultContext.m in Sources */ = {isa = PBXBuildFile; fileRef = 46B32F8110249DC600F40719 /* NSManagedObjectContextDefaultContext.m */; };
 		46B32FA61024F41B00F40719 /* NSManagedObjectContextDefaultContextTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 46B32FA51024F41B00F40719 /* NSManagedObjectContextDefaultContextTest.m */; };
@@ -162,6 +167,16 @@
 		469B10471031C7C800025C80 /* NSFetchedResultsControllerSortedObject.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NSFetchedResultsControllerSortedObject.m; sourceTree = "<group>"; };
 		469B104A1031C82400025C80 /* NSFetchedResultsControllerSortedObjectTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NSFetchedResultsControllerSortedObjectTest.h; sourceTree = "<group>"; };
 		469B104B1031C82400025C80 /* NSFetchedResultsControllerSortedObjectTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NSFetchedResultsControllerSortedObjectTest.m; sourceTree = "<group>"; };
+		469B8A5C105532FF00F59D7E /* ISCDListTableViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ISCDListTableViewController.h; sourceTree = "<group>"; };
+		469B8A5D105532FF00F59D7E /* ISCDListTableViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ISCDListTableViewController.m; sourceTree = "<group>"; };
+		469B8A79105542FB00F59D7E /* ISFetchRequestConditionTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ISFetchRequestConditionTest.h; sourceTree = "<group>"; };
+		469B8A7A105542FB00F59D7E /* ISFetchRequestConditionTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ISFetchRequestConditionTest.m; sourceTree = "<group>"; };
+		469B8A8B105545C100F59D7E /* ISCDListTableViewControllerTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ISCDListTableViewControllerTest.h; sourceTree = "<group>"; };
+		469B8A8C105545C100F59D7E /* ISCDListTableViewControllerTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ISCDListTableViewControllerTest.m; sourceTree = "<group>"; };
+		469B8A92105547DB00F59D7E /* UITableViewControllerTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = UITableViewControllerTest.h; sourceTree = "<group>"; };
+		469B8A93105547DB00F59D7E /* UITableViewControllerTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = UITableViewControllerTest.m; sourceTree = "<group>"; };
+		469B8A94105547DB00F59D7E /* UIViewControllerTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = UIViewControllerTest.h; sourceTree = "<group>"; };
+		469B8A95105547DB00F59D7E /* UIViewControllerTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = UIViewControllerTest.m; sourceTree = "<group>"; };
 		469F8E820FBC5A4C004FD86F /* NSExceptionExtension.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NSExceptionExtension.h; sourceTree = "<group>"; };
 		469F8E830FBC5A4C004FD86F /* NSExceptionExtension.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NSExceptionExtension.m; sourceTree = "<group>"; };
 		46B32F8010249DC600F40719 /* NSManagedObjectContextDefaultContext.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NSManagedObjectContextDefaultContext.h; sourceTree = "<group>"; };
@@ -325,6 +340,7 @@
 		4647BE6E102422D2003D1D17 /* CoreData */ = {
 			isa = PBXGroup;
 			children = (
+				469B8A5B105532E800F59D7E /* UIKit */,
 				469B10451031C7C800025C80 /* NSFetchedResultsController */,
 				468F0BE91025DA2800F3DDF6 /* NSManagedObject */,
 				4647C2E710246B54003D1D17 /* NSManagedObjectContext */,
@@ -351,6 +367,7 @@
 		4647BF331024324A003D1D17 /* CoreData */ = {
 			isa = PBXGroup;
 			children = (
+				469B8A8A105545AB00F59D7E /* UIKit */,
 				468F0BFA1025E6A700F3DDF6 /* Entities */,
 				468F0C131025E82B00F3DDF6 /* NSManagedObject */,
 				46B32FA31024F40E00F40719 /* NSManagedObjectContext */,
@@ -420,6 +437,8 @@
 				467BCC6B1029DD0B00D19D4B /* NSManagedObjectFindTest.m */,
 				4643C07C10464FA300677C80 /* NSManagedObjectListTest.h */,
 				4643C07D10464FA300677C80 /* NSManagedObjectListTest.m */,
+				469B8A79105542FB00F59D7E /* ISFetchRequestConditionTest.h */,
+				469B8A7A105542FB00F59D7E /* ISFetchRequestConditionTest.m */,
 			);
 			path = NSManagedObject;
 			sourceTree = "<group>";
@@ -442,6 +461,24 @@
 			path = NSFetchedResultsController;
 			sourceTree = "<group>";
 		};
+		469B8A5B105532E800F59D7E /* UIKit */ = {
+			isa = PBXGroup;
+			children = (
+				469B8A5C105532FF00F59D7E /* ISCDListTableViewController.h */,
+				469B8A5D105532FF00F59D7E /* ISCDListTableViewController.m */,
+			);
+			path = UIKit;
+			sourceTree = "<group>";
+		};
+		469B8A8A105545AB00F59D7E /* UIKit */ = {
+			isa = PBXGroup;
+			children = (
+				469B8A8B105545C100F59D7E /* ISCDListTableViewControllerTest.h */,
+				469B8A8C105545C100F59D7E /* ISCDListTableViewControllerTest.m */,
+			);
+			path = UIKit;
+			sourceTree = "<group>";
+		};
 		46B32FA31024F40E00F40719 /* NSManagedObjectContext */ = {
 			isa = PBXGroup;
 			children = (
@@ -518,6 +555,10 @@
 		46C6AB400F2DBE7E00BA1B73 /* ControllerTest */ = {
 			isa = PBXGroup;
 			children = (
+				469B8A92105547DB00F59D7E /* UITableViewControllerTest.h */,
+				469B8A93105547DB00F59D7E /* UITableViewControllerTest.m */,
+				469B8A94105547DB00F59D7E /* UIViewControllerTest.h */,
+				469B8A95105547DB00F59D7E /* UIViewControllerTest.m */,
 				462AC4B20FEAFF2400B587D6 /* UIViewBasedTest.h */,
 				462AC4B30FEAFF2400B587D6 /* UIViewBasedTest.m */,
 				462AC5A10FEB29B200B587D6 /* UITableViewBasedTest.h */,
@@ -649,6 +690,11 @@
 				4643C0991046542900677C80 /* ListTest1.m in Sources */,
 				4643C09A1046542900677C80 /* ListTest2.m in Sources */,
 				4643C27210467F9200677C80 /* NSManagedObjectCallbacks.m in Sources */,
+				469B8A5E105532FF00F59D7E /* ISCDListTableViewController.m in Sources */,
+				469B8A7B105542FB00F59D7E /* ISFetchRequestConditionTest.m in Sources */,
+				469B8A8D105545C100F59D7E /* ISCDListTableViewControllerTest.m in Sources */,
+				469B8A96105547DB00F59D7E /* UITableViewControllerTest.m in Sources */,
+				469B8A97105547DB00F59D7E /* UIViewControllerTest.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
diff --git a/tests/CiderTest/Classes/UnitTest/IUTAssertion.h b/tests/CiderTest/Classes/UnitTest/IUTAssertion.h
index 8bbb705..034f482 100644
--- a/tests/CiderTest/Classes/UnitTest/IUTAssertion.h
+++ b/tests/CiderTest/Classes/UnitTest/IUTAssertion.h
@@ -69,8 +69,6 @@
 
 #define ASSERT_EQUAL_LOCALIZED_STRING(_expected, _value) ASSERT_EQUAL(NSLocalizedString(_expected, nil), _value)
 
-#define ASSERT_EQUAL_LOCALIZED_STRING_FROM_TABLE(_expected, _table, _value) ASSERT_EQUAL(NSLocalizedStringFromTable(_expected, _table, nil), _value)
-
 
 
 
diff --git a/tests/CiderTest/Classes/UnitTest/IUTTestRunner.m b/tests/CiderTest/Classes/UnitTest/IUTTestRunner.m
index 60ecd4b..e5a3496 100644
--- a/tests/CiderTest/Classes/UnitTest/IUTTestRunner.m
+++ b/tests/CiderTest/Classes/UnitTest/IUTTestRunner.m
@@ -401,73 +401,6 @@ IUTLog(@"    *** Error:%@", e.assertionInfo.message);
                     self.exception = nil;
                 }
             }
-/* DELETEME:
-            @try {
-IUTLog(@"  %@", testSel);
-                [tests addObject:testSel];
-                
-                // setup
-IUTLog(@"  　　setUp");
-                [self performSelectorOnMainThread:@"setUp" target:site];
-                if (self.exception) @throw self.exception;
-                if (site.testAfterDelay != 0.0) {
-                    [NSThread sleepForTimeInterval:site.testAfterDelay];
-                }
-                
-                // test
-IUTLog(@"  　　test");
-            
-                [self performSelectorOnMainThread:testSel target:site];
-                if (self.exception) @throw self.exception;
-                
-                // next test
-                while(site.nextTest) {
-                    SEL aSelector = site.nextTest;
-                    site.nextTest = NULL;
-                    if (site.nextTestAfterDelay != 0.0) {
-                        [NSThread sleepForTimeInterval:site.nextTestAfterDelay];
-                    }
-IUTLog(@"  　　  %@", NSStringFromSelector(aSelector));
-                    [self performSelectorOnMainThread:NSStringFromSelector(aSelector) target:site];
-                    if (self.exception) {
-                        @throw self.exception;
-                    }
-                }
-                
-                [passes addObject:testSel];
-                [preference addPassedTest:siteName methodName:testSel];
-            }
-            @catch (NSException * e) {
-                if ([e isFailure]) {
-IUTLog(@"    *** Fail:%@", e.assertionInfo.message);
-                    [fails addObject:e];
-                } else {
-                    NSException *anException = [IUTAssertion assertionErrorExceptionFrom:e klass:[site class] selectorName:testSel];
-IUTLog(@"    Error:%@", e.assertionInfo.message);
-                    [errors addObject:anException];
-                }
-            }
-            @finally {
-                self.exception = nil;
-                @try {
-                
-                // tear down
-IUTLog(@"  　　tearDown");
-                    [self performSelectorOnMainThread:@"tearDown" target:site];
-                    if (self.exception) @throw self.exception;
-                }
-                @catch (NSException * e) {
-                    NSException *anException = [IUTAssertion assertionErrorExceptionFrom:e klass:[site class] selectorName:testSel];
-IUTLog(@"  Error:%@", e.assertionInfo.message);
-                    [errors addObject:anException];
-                }
-                @finally {
-                    i++;
-                    [sender performSelectorOnMainThread:@selector(setProgress:) withObject:[NSNumber numberWithFloat:(float)i / (float)count] waitUntilDone:YES];
-                    self.exception = nil;
-                }
-            }
-*/
         }
     }
 
diff --git a/tests/CiderTest/Classes/UnitTest/UITableViewControllerTestHelper.h b/tests/CiderTest/Classes/UnitTest/UITableViewControllerTestHelper.h
index fdace25..455b648 100644
--- a/tests/CiderTest/Classes/UnitTest/UITableViewControllerTestHelper.h
+++ b/tests/CiderTest/Classes/UnitTest/UITableViewControllerTestHelper.h
@@ -1,16 +1,31 @@
 /*
  *  UITableViewControllerTestHelper.h
- *  ioCoreTest
+ *  iUnitTest
  *
- *  Created by Katsuyoshi Ito on 09/06/20.
+ *  Created by Katsuyoshi Ito on 09/09/04.
  *  Copyright 2009 ITO SOFT DESIGN Inc. All rights reserved.
  *
  */
 
-#define CELL(r,s)	[self.controller.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]]
 
-#define NUMBER_OF_SECTIONS()	[self.controller numberOfSectionsInTableView:self.controller.tableView]
-#define NUMBER_OF_ROWS_IN_SECTION(s)	[self.controller tableView:self.controller.tableView numberOfRowsInSection:(s)]
-#define CELL_FOR_ROW_IN_SECTION(r,s)	[self.controller tableView:self.controller.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:r inSection:s]]
-#define SELECT_CELL(r,s)	[self.controller tableView:self.controller.tableView didSelectRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]]
+// For UITableViewController
 
+#define CELL(r,s)                       [self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]]
+
+#define NUMBER_OF_SECTIONS()            [self.tableViewController numberOfSectionsInTableView:self.tableView]
+
+#define NUMBER_OF_ROWS_IN_SECTION(s)	[self.tableViewController tableView:self.tableView numberOfRowsInSection:(s)]
+
+#define CELL_FOR_ROW_IN_SECTION(r,s)    [self.tableViewController tableView:self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]];
+
+#define SELECT_CELL(r,s)                [self.tableViewController tableView:self.tableView didSelectRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]]
+
+#define TITLE_FOR_SECTION(s)            [self.tableViewController tableView:self.tableView titleForHeaderInSection:s]
+
+#define EDITING_STYLE(r,s)              [self.tableViewController tableView:self.tableView editingStyleForRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]]
+
+
+
+// For UITableView
+
+#define TABLEVIEW_CELL(r,s)             [self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:(r) inSection:(s)]]
